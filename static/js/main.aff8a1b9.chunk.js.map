{"version":3,"sources":["contexts/CartContext/CartContext.js","Tools/firebase.js","components/NavBar/NavBar.js","components/ItemCount/ItemCount.js","components/Item/Item.js","components/Loading/Loading.js","components/ItemList/ItemList.js","containers/Home/Home.js","components/ItemDetail/ItemDetail.js","containers/ItemDetailContainer/ItemDetailContainer.js","components/CartItem/CartItem.js","components/CartEmpty/CartEmpty.js","components/CheckOut/CheckOut.js","containers/CartContainer/CartContainer.js","App.js","reportWebVitals.js","index.js"],"names":["CartContext","React","createContext","useCartContext","useContext","CartContexProvider","children","useState","cartContent","setCartContent","hookTotal","setHookTotal","totalCart","actualContent","pop","total","reduce","acc","item","price","discount","cant","items","push","Provider","value","updateCart","categoryId","description","id","image","stock","title","newProduct","isOnCart","find","actualCartContent","indice","indexOf","splice","unshift","inmaxmin","killCartItem","console","log","DB","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","GetDBFireBase","firestore","NavBar","categorys","setCategorys","useEffect","collection","get","then","result","size","documents","docs","map","doc","data","idFirebase","localStorage","setItem","JSON","stringify","catch","error","finally","Navbar","bg","variant","to","Brand","Nav","className","Link","NavDropdown","index","Item","name","Button","ItemCount","thisCart","updateThisCart","Fragment","role","aria-label","ButtonGroup","disabled","onClick","cat","setthisCart","Card","Img","src","Body","Title","Text","Badge","Math","round","count","block","Loading","Spinner","animation","ItemList","params","products","setProducts","loading","setLoading","useParams","parse","getItem","isOnCat","where","parseInt","limit","setTimeout","Home","ItemDetail","itemId","ItemDetailContainer","loader","setLoader","undefined","CartItem","totalCash","CartEmpty","alt","CheckOut","show","setShow","handleClose","orders","setOrders","checkActive","setcheckActive","activer","evnt","email","document","getElementById","email2","phone","tryPostOrder","userInfo","alert","length","itemsPost","postData","buyer","date","Timestamp","fromDate","Date","state","add","article","runTransaction","t","newStock","update","Promise","resolve","err","updateStock","postOrder","Modal","onHide","backdrop","keyboard","Header","closeButton","Form","Row","Group","controlId","Label","Control","type","placeholder","required","onInput","Footer","CartContainer","totals","showContent","totalItems","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aff8a1b9.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\nexport const CartContext = React.createContext();\nexport const useCartContext = () => useContext(CartContext);\nexport function CartContexProvider({ children }) {\n\n  const inmaxmin = [1, 0, 5];\n  const [cartContent, setCartContent] = useState([{ \"totalCash\": 0, \"totalItems\":0 }])\n  const [hookTotal, setHookTotal] =useState(0)\n\n  function totalCart() {\n    let actualContent = cartContent;\n    actualContent.pop();\n    const total = actualContent.reduce((acc, item) => acc + item.price * ((100-item.discount)/100) * item.cant, 0);\n    const items = actualContent.reduce((acc, item) => acc + item.cant, 0);\n    actualContent.push({\"totalCash\":total, \"totalItems\":items});\n    setCartContent(actualContent)\n    setHookTotal(items);\n  }\n\n  function killCartItem(id) {\n    const isOnCart = cartContent.find(item => item.id === id);\n    let actualCartContent = cartContent;\n    if (isOnCart) {\n      let indice = actualCartContent.indexOf(isOnCart);\n      actualCartContent.splice(indice, 1);\n      setCartContent(actualCartContent)\n      totalCart();\n  }else{console.log(\"Error Item Id not Founded\")}}\n\n  function updateCart(categoryId, description, discount, id, image, price, stock, title, cant) {\n    const newProduct = {\n      \"categoryId\": categoryId,\n      \"description\": description,\n      \"discount\": discount,\n      \"id\": id,\n      \"image\": image,\n      \"price\": price,\n      \"stock\": stock,\n      \"title\": title,\n      \"cant\": cant\n    }\n\n    const isOnCart = cartContent.find(item => item.id === newProduct.id);\n    let actualCartContent = cartContent;\n    if (isOnCart) {\n      let indice = actualCartContent.indexOf(isOnCart);\n      newProduct.cant = isOnCart.cant + newProduct.cant;\n      actualCartContent.splice(indice, 1);\n      actualCartContent.unshift(newProduct);\n      setCartContent(actualCartContent)\n      totalCart()\n    } else { \n      actualCartContent.unshift(newProduct);\n      setCartContent(actualCartContent)\n      totalCart();\n    }\n  }\n\n  return <>\n    <CartContext.Provider value={{ updateCart, inmaxmin, cartContent,hookTotal,killCartItem}} >\n      {children}\n    </CartContext.Provider>\n  </>\n}","import firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC4gb2hMwhnHsoPxYL5mWdZm8OwaNtbAXQ\",\n    authDomain: \"mdq-store.firebaseapp.com\",\n    databaseURL: \"https://mdq-store.firebaseio.com\",\n    projectId: \"mdq-store\",\n    storageBucket: \"mdq-store.appspot.com\",\n    messagingSenderId: \"303914116723\",\n    appId: \"1:303914116723:web:15f48e7f01c49090022c06\",\n    measurementId: \"G-CFNBSPJC97\"\n};\n\nconst DB = firebase.initializeApp(firebaseConfig);\nexport const GetDBFireBase = () => firebase.firestore(DB);","import React, { useEffect, useState } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport { useCartContext } from \"../../contexts/CartContext/CartContext\";\nimport { Link } from \"react-router-dom\";\nimport { GetDBFireBase } from \"../../Tools/firebase\";\n\nfunction NavBar() {\n  const { hookTotal } = useCartContext();\n  const [categorys, setCategorys] = useState(null);\n\n  useEffect(() => {\n    const getprods = GetDBFireBase().collection(\"Category\");\n\n    getprods\n      .get()\n      .then((result) => {\n        if (result.size === 0) {\n          console.log(\"Sin resultados\");\n        }\n        const documents = result.docs.map((doc) => ({\n          ...doc.data(),\n          idFirebase: doc.id,\n        }));\n        setCategorys(documents);\n        localStorage.setItem(\"categorys\", JSON.stringify(documents));\n      })\n      .catch((error) => console.log(error))\n      .finally(() => {});\n  }, []);\n\n  return (\n    <Navbar bg=\"light\" variant=\"light\">\n      <Link to={\"/\"}>\n        <Navbar.Brand>MdqStore</Navbar.Brand>\n      </Link>\n      <Nav className=\"mr-auto\">\n        <Nav.Link>\n          <Link to={\"/\"}>Home</Link>\n        </Nav.Link>\n        <NavDropdown title=\"Categorys\" id=\"collasible-nav-dropdown\">\n          {categorys ? (\n            categorys.map((item, index) => (\n              <NavDropdown.Item key={\"Cat\" + item.id + index}>\n                <Link to={\"/categorys/\" + item.name}>{item.name}</Link>\n              </NavDropdown.Item>\n            ))\n          ) : (\n            <></>\n          )}\n        </NavDropdown>\n      </Nav>\n      <Link to={\"/cart\"}>\n        <Button variant=\"outline-primary\">Cart {hookTotal} </Button>\n      </Link>\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\nfunction ItemCount({ inmaxmin, thisCart, updateThisCart}) {\n    return (\n        <React.Fragment>\n            <div className=\"btn-toolbar d-flex justify-content-center\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                <ButtonGroup>\n                    <Button disabled={thisCart === inmaxmin[0]} onClick={() => (updateThisCart(-1))} >-</Button>\n                    <Button disabled>{thisCart}</Button>\n                    <Button disabled={thisCart === inmaxmin[2]} onClick={() => (updateThisCart(1))}>+</Button>\n                </ButtonGroup>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default ItemCount;","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport ItemCount from '../ItemCount/ItemCount';\nimport { useCartContext } from '../../contexts/CartContext/CartContext';\nimport { Link } from 'react-router-dom';\n\nfunction Item({ cat, categoryId, description, discount, id, image, price, stock, title }) {\n    const { inmaxmin, updateCart } = useCartContext();\n    const [thisCart, setthisCart] = useState(inmaxmin[0]);\n    function updateThisCart(count) {\n        setthisCart(thisCart + count)\n    }\n    return (\n        <div className=\"Item card col-md-2 col-sm-6 col-xs-12 mt-1\">\n            <Link to={\"/item/\"+id}>\n                {cat? \n                <Card.Img variant=\"top\" src={\"../\"+image} /> : \n                <Card.Img variant=\"top\" src={image} />}\n            </Link>\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>\n                    <div className=\"row\">\n                    <del className=\"col-9\">price: ${price} </del>\n                    <Badge variant=\"warning\" >-{discount}%</Badge> \n                    <h4 className=\"col-12 text-center\"> ${Math.round(price * ((100 - discount) / 100) * 100) / 100}</h4>\n                    </div>\n                </Card.Text>\n                <ItemCount\n                    inmaxmin={inmaxmin} thisCart={thisCart}\n                    updateThisCart={updateThisCart} updateCart={updateCart}\n                />\n                <div className=\"mt-1\">\n                    <Button variant=\"success\" block onClick={\n                        () => (updateCart(categoryId, description, discount, id, image, price, stock, title, thisCart))}>\n                        Add To Cart\n                    </Button>\n                </div>\n\n            </Card.Body>\n        </div>\n    );\n}\n\nexport default Item;","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className=\"col-12 d-flex-column mt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <Spinner animation=\"grow\" />\r\n        <Spinner animation=\"border\" />\r\n        <Spinner animation=\"grow\" />\r\n      </div>\r\n      <div className=\"row justify-content-center mt-3\">\r\n        <p>Loading...</p>\r\n      </div>\r\n      <div className=\"row justify-content-center\">\r\n        <Spinner animation=\"grow\" />\r\n        <Spinner animation=\"border\" />\r\n        <Spinner animation=\"grow\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from 'react';\nimport { GetDBFireBase } from \"../../Tools/firebase\";\nimport Item from '../Item/Item';\nimport Loading from '../Loading/Loading';\nimport { useParams } from 'react-router-dom';\n\nfunction ItemList(params) {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {categoryId} = useParams();\n  let categorys = JSON.parse(localStorage.getItem('categorys'));\n\n  useEffect(() => {\n    const isOnCat = categorys.find(item => item.name === categoryId);\n    let getprods;\n    categoryId? getprods = GetDBFireBase().collection(\"Productos\").where(\"categoryId\", \"==\",parseInt(isOnCat.id)) :\n    getprods = GetDBFireBase().collection(\"Productos\").limit(100);\n\n    getprods.get().then((result) => {\n      if (result.size === 0) {\n        console.log(\"Sin resultados\");\n      }\n      const documents = result.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n      setProducts(documents);\n      setTimeout(() => {\n        setLoading(false);\n      }, 3000);\n\n    })\n      .catch((error) => console.log(error))\n      .finally(() => { });\n  }\n  // eslint-disable-next-line\n    , [])\n\n  return (\n    loading ? <Loading/> :\n      <React.Fragment>\n        <div className=\"ItemList\">\n          <div className=\"container col-12\">\n            <div className=\"row\">\n              {products.map((item, index) => <Item\n                key={item.id+index}\n                cat={categoryId}\n                categoryId={item.categoryId}\n                description={item.description}\n                discount={item.discount}\n                id={item.id}\n                image={item.image}\n                price={item.price}\n                stock={item.stock}\n                title={item.title} />)}\n            </div></div></div>\n      </React.Fragment>\n  );\n}\n\nexport default ItemList;\n","import React from 'react';\nimport ItemList from '../../components/ItemList/ItemList';\n\nfunction Home() {\n  \n  return (\n    <div className=\"Home\">\n          <ItemList />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ItemCount from '../ItemCount/ItemCount';\nimport { useCartContext } from '../../contexts/CartContext/CartContext';\n\nfunction ItemDetail({ itemId }) {\n    console.log('itemId', itemId)\n    const { inmaxmin, updateCart } = useCartContext();\n    const [thisCart, setthisCart] = useState(inmaxmin[0]);\n    function updateThisCart(count) {\n        setthisCart(thisCart + count)\n    }\n\n    return ( \n        <React.Fragment>\n            <div className=\"row\">\n            <div className=\"Item card col-3\">\n                <Card.Img variant=\"top\" src={\".\" + itemId.image} />\n            </div>\n            <div className=\"Item card col-9\">\n                <Card.Body>\n                    <Card.Title>{itemId.title}</Card.Title>\n                    <Card.Text>\n                        <p>description: {itemId.description} </p>\n                        <p>price: {itemId.price} </p>\n                        <p>discount: {itemId.discount} </p>\n                    </Card.Text>\n                    <ItemCount\n                        inmaxmin={inmaxmin} thisCart={thisCart}\n                        updateThisCart={updateThisCart} updateCart={updateCart}\n                    />\n                    <div className=\"mt-1\">\n                        <Button variant=\"success\" block onClick={\n                            () => (updateCart(itemId.categoryId, itemId.description, itemId.discount, itemId.id, itemId.image, itemId.price, itemId.stock, itemId.title, thisCart))}>\n                            Add To Cart\n                    </Button>\n                    </div>\n\n                </Card.Body>\n            </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default ItemDetail;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ItemDetail from \"../../components/ItemDetail/ItemDetail\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { GetDBFireBase } from \"../../Tools/firebase\";\n\nfunction ItemDetailContainer() {\n  const { itemId } = useParams();\n  const [item, setItem] = useState(null);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    const getprods = GetDBFireBase().collection(\"Productos\");\n    const thisOne = getprods.doc(itemId);\n\n    thisOne\n      .get()\n      .then((result) => {\n        if (result.data() === undefined) {\n          console.log(\"Sin resultados - Result:\");\n          return;\n        }\n        const documents = { id: result.id, ...result.data() };\n        setItem(documents);\n      })\n      .catch((error) => console.log(error))\n      .finally(() => {\n        setLoader(false);\n      });\n      // eslint-disable-next-line\n  }, []);\n\n  return (\n    <React.Fragment>\n      {item ? (\n        <ItemDetail itemId={item} />\n      ) : loader ? (\n        <Loading />\n      ) : (\n        <h3>\n          No se encontraron resultados con el id <br /> {itemId} <br /> en la\n          base de datos\n        </h3>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default ItemDetailContainer;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ItemCount from '../ItemCount/ItemCount';\nimport { useCartContext } from '../../contexts/CartContext/CartContext';\n\nfunction CartItem({ item }) {\n    const { inmaxmin, killCartItem, updateCart } = useCartContext();\n\n    const [thisCart, setthisCart] = useState(item.cant);\n    function updateThisCart(count) {\n        setthisCart(thisCart + count)\n    }\n\n    return ( item.totalCash? <></> :\n        <React.Fragment>\n            <div className=\"row\">\n            <div className=\"Item card col-2\">\n                <Card.Img variant=\"top\" src={\".\" + item.image} />\n            </div>\n            <div className=\"Item card col-10\">\n                <Card.Body>\n                <button className=\"btn btn-danger float-right\" onClick={() => killCartItem(item.id)}>x</button>\n                    <Card.Title>{item.title}</Card.Title>\n                    <Card.Text>\n                        <p>Description: {item.description} </p>\n                        <div className=\"row border\">\n                        <p className=\"col-4\">Price: ${item.price} </p>\n                        <p className=\"col-4\">-{item.discount}%</p>\n                        <p className=\"col-2\">=</p>\n                        <p className=\"col-2\">{item.price*((100-item.discount)/100)}</p>\n                        </div>\n                        <div className=\"row mt-2 justify-content-around\">\n                        <p >Quantity: {item.cant}</p>\n                    <ItemCount\n                        inmaxmin={inmaxmin} thisCart={thisCart}\n                        updateThisCart={updateThisCart} updateCart={updateCart}\n                    />\n                        <p >Total $ {item.price*((100-item.discount)/100)*item.cant}</p>\n                        </div>\n                    </Card.Text>\n                    <div className=\"mt-1\">\n                        <Button variant=\"success\" block onClick={\n                            () => (updateCart(item.categoryId, item.description, item.discount, \n                                    item.id, item.image, item.price, item.stock, item.title, \n                                    thisCart-item.cant))}>\n                            Modfy Cart\n                    </Button>\n                    </div>\n\n                </Card.Body>\n            </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default CartItem;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function CartEmpty() {\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row col-12 justify-content-center\">\n            <img src=\"./images/cart.png\" alt=\"Cart Icon\"/>\n            <div className=\"row col-12 justify-content-center\">\n                <h1>Cart is Empty. Click <Link to={\"/\"}>Here </Link> to return shopping</h1>\n            </div>\n            </div>\n        </div>\n\n    )\n}","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useCartContext } from \"../../contexts/CartContext/CartContext\";\nimport { GetDBFireBase } from \"../../Tools/firebase\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nfunction CheckOut() {\n  const { cartContent } = useCartContext();\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [orders, setOrders] = useState(false);\n  const [checkActive, setcheckActive] = useState(true);\n\n  function activer(evnt) {\n    let email = document.getElementById(\"formEmail\").value;\n    let email2 = document.getElementById(\"formEmail2\").value;\n    let name = document.getElementById(\"formName\").value;\n    let phone = document.getElementById(\"formCellphone\").value;\n    if (email === email2 && name !== \"\" && phone !== \"\") {\n      setcheckActive(false);\n    }\n  }\n\n  function tryPostOrder() {\n    const email2 = { email: document.getElementById(\"formEmail2\").value };\n    const userInfo = {\n      name: document.getElementById(\"formName\").value,\n      phone: document.getElementById(\"formCellphone\").value,\n      email: document.getElementById(\"formEmail\").value,\n    };\n\n    if (\n      email2.email === userInfo.email &&\n      userInfo.name !== \"\" &&\n      userInfo.phone !== \"\"\n    ) {\n      postOrder(userInfo);\n    } else {\n      console.log(\"userInfo\", userInfo, \"email2\", email2);\n      return alert(\"Por favor verifique los datos ingresados\");\n    }\n  }\n\n  function postOrder(userInfo) {\n    const total = cartContent[cartContent.length - 1];\n    let itemsPost = [];\n\n    for (let index = 0; index < cartContent.length - 1; index++) {\n      let item = cartContent[index];\n      itemsPost.push({\n        cant: item.cant,\n        id: item.id,\n        price: item.price,\n        discount: item.discount,\n        title: item.title,\n      });\n    }\n    let postData = {\n      buyer: userInfo,\n      items: itemsPost,\n      date: firebase.firestore.Timestamp.fromDate(new Date()),\n      total: total,\n      state: \"generated\"\n    };\n\n    const getOrders = GetDBFireBase().collection(\"Orders\");\n    getOrders\n      .add(postData)\n      .then(({ id }) => {\n        setOrders(id);\n        updateStock();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setcheckActive(true);\n      });\n  }\n\n  function updateStock() {\n    for (let index = 0; index < cartContent.length - 1; index++) {\n      let item = cartContent[index];\n      let article = GetDBFireBase().collection(\"Productos\").doc(item.id);\n      GetDBFireBase()\n        .runTransaction((t) => {\n          return t.get(article).then((doc) => {\n            let newStock = doc.data().stock - item.cant;\n            t.update(article, { stock: newStock });\n            return Promise.resolve(\"New Stock is\" + newStock);\n          });\n        })\n        .then((result) => {\n          console.log(item.title);\n          console.log(\"Transaction success\", result);\n        })\n        .catch((err) => {\n          console.log(\"Transaction failure:\", err);\n        });\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"container mt-5\">\n        <Button\n          id=\"checkButton\"\n          size=\"lg\"\n          variant=\"warning\"\n          onClick={handleShow}\n          block\n        >\n          CheckOut\n        </Button>\n      </div>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>CheckOut</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Row>\n              <Form.Group controlId=\"formName\">\n                <Form.Label>Name: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your Name\"\n                  required\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formCellphone\">\n                <Form.Label>Cell Phone</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your Cell Phone Number\"\n                  required\n                />\n              </Form.Group>\n            </Form.Row>\n            <Form.Group controlId=\"formEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                onInput={() => activer()}\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                required\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formEmail2\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                onInput={() => activer()}\n                type=\"email\"\n                placeholder=\"Please confirm your email\"\n                required\n              />\n\n              <Form.Text className=\"text-muted\">\n                We'll never share your email or personal information with anyone\n                else.\n              </Form.Text>\n            </Form.Group>\n            <Button\n              disabled={checkActive}\n              variant=\"primary\"\n              onClick={() => tryPostOrder()}\n            >\n              Confirm Order\n            </Button>\n            {orders ? (\n              <Form.Text className=\"text-muted\">\n                Your Order Id is: {orders}\n              </Form.Text>\n            ) : (\n              <></>\n            )}\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default CheckOut;\n","import React from 'react';\nimport { useCartContext } from '../../contexts/CartContext/CartContext';\nimport CartItem from '../../components/CartItem/CartItem';\nimport CartEmpty from '../../components/CartEmpty/CartEmpty';\nimport CheckOut from '../../components/CheckOut/CheckOut';\n\nfunction CartContainer() {\n    const { cartContent, updateCart } = useCartContext();\n    const totals = cartContent[cartContent.length - 1];\n    let showContent = cartContent;\n\n    return ( showContent.length===1? <CartEmpty/> :\n        <React.Fragment>\n            <div className=\"row border m-3 justify-content-around\">\n            <h3 >Total Cart: ${totals.totalCash}</h3>\n            <h4 >{totals.totalItems} items</h4>\n            </div>\n            {showContent.map((item, index) => <CartItem key={index} updateCart={updateCart} item={item} />)}\n            <CheckOut/>\n        </React.Fragment>\n    )\n}\n\nexport default CartContainer;","import React from 'react';\nimport NavBar from './components/NavBar/NavBar';\nimport Home from './containers/Home/Home';\nimport { CartContexProvider } from './contexts/CartContext/CartContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ItemDetailContainer from './containers/ItemDetailContainer/ItemDetailContainer';\nimport CartContainer from './containers/CartContainer/CartContainer';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <CartContexProvider>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/item/:itemId\">\n            <ItemDetailContainer />\n          </Route>\n          <Route path=\"/cart\">\n            <CartContainer />\n          </Route>\n          <Route path=\"/categorys/:categoryId\">\n            <Home />\n          </Route>\n        </Switch>\n      </CartContexProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}